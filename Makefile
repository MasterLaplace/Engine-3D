##
## EPITECH PROJECT, 2023
## Title: Engine-3D
## Author: MasterLaplace
## Created: 2023-10-13
## File description:
## Makefile
##

-include .env
export

BIN 		=	bin/

INCLUDES	=	-I ./includes -I ./libs/my/include -I ./libs/link/include

LIB_NAME	=	-L ./libs -lmy -llink

OPTI		=	-Ofast -march=native -flto -fuse-linker-plugin -pipe \
				-fomit-frame-pointer -fopenmp -fprefetch-loop-arrays \
				-fno-stack-protector -fno-ident -fno-asynchronous-unwind-tables

IGNORE		= 	-fno-strict-aliasing -Wno-strict-aliasing

CSFML		=	-l csfml-graphics \
				-l csfml-system   \
				-l csfml-window   \
				-l csfml-audio


LDFLAGS		=	$(INCLUDES) $(LIB_NAME) $(CSFML) -lm

CFLAGS		=	$(FLAGS) $(LDFLAGS) $(OPTI) $(IGNORE)

ifeq ($(OS), linux)
CC			:=	gcc
NAME		:=	$(BIN)engine.out
SHARE_NAME	:=	$(BIN)libengine.so
TEST_NAME 	:=	$(BIN)test_engine.out
endif
ifeq ($(OS), windows)
CC			:=	gcc
NAME		:=	$(BIN)engine.exe
SHARE_NAME	:=	$(BIN)libengine.dll
TEST_NAME	:=	$(BIN)test_engine.exe
endif
ifeq ($(OS), macos)
CC			:=	clang
NAME		:=	$(BIN)engine.out
SHARE_NAME	:=	$(BIN)libengine.dylib
TEST_NAME	:=	$(BIN)test_engine.out
endif
ifeq ($(OS), bsd)
CC			:=	clang
NAME		:=	$(BIN)engine.out
SHARE_NAME	:=	$(BIN)libengine.dylib
TEST_NAME	:=	$(BIN)test_engine.out
endif

SRC_COUNT	:=	$(words $(SRC))
NB	= 0

all: lib $(NAME)

lib:
	@$(MAKE) all -C ./Libs $(NO_PRINT)
	@-$(ECHO) $(BOLD) $(GREEN)"\nâ–º LIB â›½ !"$(DEFAULT)

## CLEAN TARGETS

clean:
	@$(RM) $(OBJ)
	@$(RM) $(TEST_OBJ)
	@$(MAKE) -C ./Libs clean $(NO_PRINT)
	@$(RM) *~
	@$(RM) *#
	@-$(ECHO) $(BOLD) $(GREEN)âœ“$(LIGHT_BLUE)" CLEAN ðŸ’¨"$(DEFAULT)

fclean:	clean
	@$(RM) $(NAME)
	@$(RM) $(SHARE_NAME)
	@$(RM) $(TEST_NAME)
	@$(MAKE) -C ./Libs fclean $(NO_PRINT)
	@$(RM) *.gcda
	@$(RM) *.gcno
	@$(RM) vgcore.*
	@-$(ECHO) $(BOLD) $(GREEN)âœ“$(LIGHT_BLUE)" FCLEAN ðŸ§»"$(DEFAULT)

re: fclean all

## DEBUG MODE

debug: OPTI		= -Og -pipe
debug: CFLAGS	= $(FLAGS) $(LDFLAGS) $(OPTI) $(IGNORE) -g3 -ggdb -DDEBUG
debug: fclean lib_debug $(NAME)
	@-$(ECHO) $(BOLD) $(GREEN)"\nâ–º DEBUG MODE ðŸ”§ !"$(DEFAULT)

lib_debug:
	@$(MAKE) debug -C ./Libs $(NO_PRINT)
	@-$(ECHO) $(BOLD) $(GREEN)"\nâ–º LIB DEBUG ðŸ”§ !"$(DEFAULT)

## ANAYLIZE MODE

gprof: OPTI		+= -fno-omit-frame-pointer
gprof: CFLAGS	= $(FLAGS) $(LDFLAGS) $(OPTI) $(IGNORE) -pg
gprof: fclean lib_gprof $(NAME)
	@-$(ECHO) $(BOLD) $(GREEN)"\nâ–º GPROF MODE ðŸ¤– !"$(DEFAULT)

lib_gprof:
	@$(MAKE) gprof -C ./Libs $(NO_PRINT)
	@-$(ECHO) $(BOLD) $(GREEN)"\nâ–º LIB GPROF ðŸ¤– !"$(DEFAULT)

## INSTALL MODE

share: lib $(OBJ)
	@$(CC) -Os -shared $(CFLAGS) -o $(SHARE_NAME) -fPIC $(SRC) \
	&& $(ECHO) $(BOLD) $(GREEN)"\nâ–º BUILD SHARE SUCCESS ðŸ§² !"$(DEFAULT) \
	|| ($(ECHO) $(BOLD) $(RED)"\nâ–º BUILD SHARE FAILED ðŸ§²"$(DEFAULT) && exit 1)

install: share
	@-read -r -p "Do you want to install the shared engine library ? [Y/n] " response; \
	if [ $$response = "Y" ] || [ $$response = "y" ] || [ $$response = "" ]; then \
		sudo cp $(SHARE_NAME) /usr/local/lib/ && && sudo ldconfig \
		&& $(ECHO) $(BOLD) $(GREEN)"\nâ–º INSTALL SHARE SUCCESS ðŸ§­!"$(DEFAULT) \
		|| ($(ECHO) $(BOLD) $(RED)"\nâ–º INSTALL SHARE FAILED ðŸ§­"$(DEFAULT) && exit 1) \
	fi

uninstall:
	@-read -r -p "Do you want to uninstall the shared engine library ? [Y/n] " response; \
	if [ $$response = "Y" ] || [ $$response = "y" ] || [ $$response = "" ]; then \
		sudo rm -f /usr/local/lib/libengine.so && sudo ldconfig \
		&& $(ECHO) $(BOLD) $(GREEN)"\nâ–º UNINSTALL SHARE SUCCESS ðŸ§­!"$(DEFAULT) \
		|| ($(ECHO) $(BOLD) $(RED)"\nâ–º UNINSTALL SHARE FAILED ðŸ§­"$(DEFAULT) && exit 1) \
	fi

## TEST MODE

lib_tests:
	@$(MAKE) tests_run -C ./libs $(NO_PRINT)
	@$(ECHO) $(BOLD) $(GREEN)"\nâ–º LIB TESTS ðŸ§ª !"$(DEFAULT)

%.o: %.c
	@$(eval NB=$(shell echo $$(($(NB)+1))))
	@-$(CC) -c -o $@ $^ $(CFLAGS) \
	&& python3 Scripts/improve_build.py $< $(NB) $(SRC_COUNT)

## HELP MODE

help:
	@$(ECHO) $(BOLD) $(GREEN)"\nâ–º HELP MODE ðŸ“– !"$(DEFAULT)
	@$(ECHO) $(BOLD) $(GREEN)"\nâ–º MAKEFILE COMMANDS ðŸ“– !"$(DEFAULT)
	@$(ECHO) $(BOLD) $(LIGHT_BLUE)"\nâ–º make\
	\nâ–º make re\
	\nâ–º make clean\
	\nâ–º make fclean\
	\nâ–º make debug\
	\nâ–º make gprof\
	\nâ–º make share\
	\nâ–º make install\
	\nâ–º make uninstall\
	\nâ–º make help\
	\nâ–º make author\
	\nâ–º make version"$(DEFAULT)
	@$(ECHO) $(BOLD) $(GREEN)"\nâ–º LIB COMMANDS ðŸ“– !"$(DEFAULT)
	@$(ECHO) $(BOLD) $(LIGHT_BLUE)"\nâ–º make lib\
	\nâ–º make lib_debug\
	\nâ–º make lib_gprof\
	\nâ–º make lib_tests"$(DEFAULT)
	@$(ECHO) $(BOLD) $(GREEN)"\nâ–º GRAPHICAL LIBRARIES ðŸ“– !"$(DEFAULT)
	@$(ECHO) $(BOLD) $(LIGHT_BLUE)"\nâ–º make csfml\
	\nâ–º make sfml\
	\nâ–º make sdl2\
	\nâ–º make opengl\
	\nâ–º make vulkan"$(DEFAULT)

author:
	@$(ECHO) $(USER)

version:
	@$(ECHO) $(BOLD) $(GREEN)"\nâ–º VERSION ðŸ“– !"$(DEFAULT)
	@$(ECHO) $(BOLD) $(LIGHT_BLUE)"\nâ–º $(VERSION) ðŸ“– !"$(DEFAULT)
	@$(MAKE) -C ./Libs version $(NO_PRINT)


.PHONY: all re clean fclean debug test %.o
.SILENT: all re clean fclean debug test %.o
